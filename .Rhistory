}
mySleep$Weekday <- wday(mySleep$Date, label = TRUE)
head(mySleep)
for(i in nrow(mySleep)) mySleep$Time[i] < "12:00"
for(i in nrow(mySleep)) (mySleep$Time[i] < "12:00")
for(i in nrow(mySleep)) x <- (mySleep$Time[i] < "12:00")
x
for(1:10) y<- (i<5)
for(i in 1:10) y <- (i<5)
y
for(i in nrow(mySleep)) x[i] <- (mySleep$Time[i] < "12:00")
x
for(i in 1:nrow(mySleep)) {
if(mySleep$Time[i] < "12:00") {
mySleep$Date[i] <- date(mySleep$Start.Time)[i] - 1
} else {
mySleep$Date[i] <- date(mySleep$Start.Time)[i]
}
}
head(mySleep)
mySleep$Date <- as.Date(mySleep$Date)
mySleep$nDate <- as.Date(mySleep$Date)
?POSIXlt
mySleep$Date <- as.POSIXct.date(mySleep$Date)
mySleep$Date <- as.POSIXct(mySleep$Date)
mySleep$Date <- as.POSIXct.Date(mySleep$Date)
head(mySleep)
?as.POSIXct.Date
mySleep$Date <- as.POSIXct.Date(mySleep$Date, tz = "Pacific")
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(mySleep$Time[i] < "12:00") {
mySleep$Date[i] <- date(mySleep$Start.Time)[i] - 1
} else {
mySleep$Date[i] <- date(mySleep$Start.Time)[i]
}
}
mySleep$Date <- as.POSIXct.Date(mySleep$Date, tz = "Pacific")
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(mySleep$Time[i] < "12:00") {
mySleep$Date[i] <- date(mySleep$Start.Time)[i] - 1
} else {
mySleep$Date[i] <- date(mySleep$Start.Time)[i]
}
}
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(mySleep$Time[i] < "12:00") {
mySleep$Date[i] <- date(mySleep$Start.Time, tz = "Pacific")[i] - 1
} else {
mySleep$Date[i] <- date(mySleep$Start.Time, tz = "Pacific")[i]
}
}
?Date
?date
hourlySleep <- data.frame()
x <- 1:10
x
x <- c(x, 2:11)
x
rm(x)
date <- c(20160918:20160930)
date <- c(date, 20161001:20161031, 20161101:20161118)
date
hourlySleep$date <- ymd(c(20160919:20160930, 20161001:20161031:20161101:20161118))
nrow(hourlySleep)
nrow(hourlySleep) <- 130
hdate <- ymd(c(20160919:20160930, 20161001:20161031:20161101:20161118))
hdate <- c(20160919:20160930, 20161001:20161031, 20161101:20161118)
hdate <- ymd(hdate)
hourlySleep <- cbind(hourlySleep, hdate)
hourlySleep <- data.frame(130)
?data.frame
data.frame(hdate)
date <- c(20160919:20160930, 20161001:20161031, 20161101:20161118)
date <- ymd(date)
hourlySleep <- data.frame(date)
summaru(hourlySleep)
summary(hourlySleep)
nrow(hourlySleep)
rm(hdate)
rm(i)
rm(y)
rm(weekdays)
x <- 1:10
y <- data.frame(x)
y
a <- a:z
a <- c("a":"z")
a <- 11:20
z <- cbind(x, a)
z
class(z_)
class(z)
rm(a, z)
names(y) <- c("x", "y", "z")
empty <- numeric(nrow(hourlySleep))
paste(empty, 2)
?paste
paste(empty, rep = 2)
paste("00:00" : "23:39")
paste(00:23, ":", 00)
paste(00:23, ":", 0, 0)
paste(00:23, ":", 0, 0, sep = "")
data.frame(colnames = x)
data.frame(colnames(x))
data.frame(x, paste(0:23, ":", 0, 0, sep = ""))
data.frame(x, paste(0:23, ":", 0, 0, sep = "") = empty)
data.frame(x, c(paste(0:23, ":", 0, 0, sep = "")) = empty)
c(paste(0:23, ":", 0, 0, sep = "")) = empty
paste(0:23, ":", 0, 0, sep = "") = empty
paste(0:23, ":", 0, 0, sep = "")
hourSleep <- data.frame(date, empty)
head(hourSleep)
hourSleep <- mutate("0:00" <- empty)
hourSleep[, "0:00" = empty]
hourSleep[, "0:00"] <- empty
hourSleep
hourSleep[, paste(0:23, ":", 0, 0, sep = "")] <- empty
head(hourSleep)
names(hourSleep[3])
"0:35 < 0:48"
"0:35" < "0:48"
"0:35" > "0:48"
"0:35" <= "0:48"
date <- c(20160919:20160930, 20161001:20161031, 20161101:20161118) %>%
ymd(date)
hourlySleep <- data.frame(date)
empty <- numeric(nrow(hourlySleep))
hourlySleep[, paste(0:23, ":", 0, 0, sep = "")] <- empty
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
if(names(hourlySleep)[j+1] < hourlySleep$date[i] <= names(hourlySleep)[j+2]) {
?<=
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
if(names(hourlySleep)[j+1] < hourlySleep$date[i] & hourlySleep$date[i]<= names(hourlySleep)[j+2]) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
class("0:35")
?as_datetime
as_datetime("0:35")
as_datetime("0:35", tz = "Pacific")
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
for (l in 1:nrow(mySleep)) {
if(paste(hourlySleep$date[i], names(hourlySleep)[j+1]) < mySleep$Start.Time[l] &
mySleep$Start.Time[l] <= pasate(hourlySleep$date[i], names(hourlySleep)[j+2])) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
}
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
for (l in 1:nrow(mySleep)) {
if(paste(hourlySleep$date[i], names(hourlySleep)[j+1]) < mySleep$Start.Time[l] &
mySleep$Start.Time[l] <= paste(hourlySleep$date[i], names(hourlySleep)[j+2])) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
}
head(hourlySleep)
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
for (l in 1:nrow(mySleep)) {
if(paste(hourlySleep$date[i], names(hourlySleep)[j+1]) <= mySleep$Start.Time[l] &
mySleep$End.Time[l] < paste(hourlySleep$date[i], names(hourlySleep)[j+2])) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
}
head(hourlySleep)
head(mySleep)
date <- c(20160918:20160930, 20161001:20161031, 20161101:20161118) %>%
ymd(date)
rm(hourlySleep)
rm(hourSleep)
rm(mySleep)
rm(y)
rm(0:00)
rm("0:00")
rm(date)
rm(empty)
rm(i)
rm(j)
rm(l)
rm(x)
library(lubridate)
library(dplyr)
setwd("~/Desktop/OneDrive/Documents/Data Science/Coursera Files/Course 09 Developing Data products/week3")
mySleep <- read.csv("mySleep.csv")
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time)
mySleep$End.Time <- dmy_hm(mySleep$End.Time)
head(mySleep)
date <- c(20160918:20160930, 20161001:20161031, 20161101:20161118)
date <- ymd(date)
hourlySleep <- data.frame(date)
empty <- numeric(nrow(hourlySleep))
hourlySleep[, paste(0:23, ":", 0, 0, sep = "")] <- empty
if(paste(hourlySleep$date[2], names(hourlySleep[3]) <= mySleep$Start.Time[1] & mySleep$End.Time[1] < paste(hourlySleep$date[2], names(hourlySleep)[3])) hourlySleep <- [2,3] <- 1
if(paste(hourlySleep$date[2], names(hourlySleep[3])) <= mySleep$Start.Time[1] & mySleep$End.Time[1] < paste(hourlySleep$date[2], names(hourlySleep)[3])) hourlySleep <- [2,3] <- 1
if(paste(hourlySleep$date[2], names(hourlySleep[3])) <= mySleep $Start.Time[1]) 1
if(paste(hourlySleep$date[2], names(hourlySleep[3])) <= mySleep $Start.Time[1]) hourlySleep[2, 3] <- 1 else hourlySleep[2, 3] <- 0
hourlySleep[2, 3]
if(paste(hourlySleep$date[2], names(hourlySleep[3])) <= mySleep $Start.Time[1] & paste(hourlySleep$date[2], names(hourlySleep)[4]) > mySleep$End.Time) hourlySleep[2, 3] <- 1 else hourlySleep[2, 3] <- 0
if(paste(hourlySleep$date[2], names(hourlySleep[3])) <= mySleep $Start.Time[1] & paste(hourlySleep$date[2], names(hourlySleep)[4]) > mySleep$End.Time[1]) hourlySleep[2, 3] <- 1 else hourlySleep[2, 3] <- 0
head(hourlySleep, 1)
head(mySleep, 1)
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
for (l in 1:nrow(mySleep)) {
if(paste(hourlySleep$date[i], names(hourlySleep)[j+1]) <= mySleep$Start.Time[l] &
mySleep$End.Time[l] < paste(hourlySleep$date[i], names(hourlySleep)[j+2])) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
}
head(hourlySleep)
mySleep <- read.csv("mySleep.csv")
head(mySleep)
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time)
mySleep$End.Time <- dmy_hm(mySleep$End.Time)
head(mySleep)
date <- c(20160918:20160930, 20161001:20161031, 20161101:20161118)
date <- ymd(date)
hourlySleep <- data.frame(date)
hourlySleep[, paste(0:23, ":", 0, 0, sep = "")] <- empty
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
for (l in 1:nrow(mySleep)) {
if(paste(hourlySleep$date[i], names(hourlySleep)[j+1]) <= mySleep$Start.Time[l] &
mySleep$End.Time[l] < paste(hourlySleep$date[i], names(hourlySleep)[j+2])) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
}
head(hourlySleep)
head(hourlySleep)
paste(hourlySleep$date[1], names(hourlySleep)[2])
paste(hourlySleep$date[1], names(hourlySleep)[2]) < mySleep$Start.Time[1]
paste(hourlySleep$date[1], names(hourlySleep)[3]) > mySleep$End.Time[1]
paste(hourlySleep$date[1], names(hourlySleep)[3]) > mySleep$Start.Time[1]
paste(hourlySleep$date[1], names(hourlySleep)[3])
mySleep$Start.Time[1]
paste(hourlySleep$date[2], names(hourlySleep)[2]) < mySleep$Start.Time[1]
paste(hourlySleep$date[2], names(hourlySleep)[2])
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time, tz = "Pacific")
mySleep <- read.csv("mySleep.csv")
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time, tz = "Pacific")
mySleep$Start.Time[1]
?tz
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time, tz = "American/Los_Angeles")
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time, tz = "GMT +8")
sys.timezone()
Sys.timezone()
Sys.timezone(location = "Europe/London")
Sys.timezone(location = "London")
Sys.timezone("London")
Sys.timezone("Europe/London")
Sys.timezone() <- "Europe/London"
Sys.setenv(TZ = "GMT")
mySleep <- read.csv("mySleep.csv")
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time)
mySleep$End.Time <- dmy_hm(mySleep$End.Time)
head(mySleep)
date <- c(20160918:20160930, 20161001:20161031, 20161101:20161118)
date <- ymd(date)
hourlySleep <- data.frame(date)
empty <- numeric(nrow(hourlySleep))
hourlySleep[, paste(0:23, ":", 0, 0, sep = "")] <- empty
for (i in 1:nrow(hourlySleep)) {
for (j in 1:ncol(hourlySleep)){
for (l in 1:nrow(mySleep)) {
if(paste(hourlySleep$date[i], names(hourlySleep)[j+1]) <= mySleep$Start.Time[l] &
mySleep$End.Time[l] < paste(hourlySleep$date[i], names(hourlySleep)[j+2])) {
hourlySleep[i, j+1] <- 1
} else 0
}
}
}
time <- paste(0:24, ":", 0, 0)
for (i in 1:nrow(hourlySleep)) {
for (j in 1:24) {
for (l in 1:nrow(mySleep)) {
if(paste(date[i], time[j+1]) > mySleep$Start.Time & paste(date[i], time[j] <= mySleep$End.Time)) {
hourlySleep[i, j+1] <- 1
} else {
hourlySleep[i, j+1] <- 0
}
}
}
}
time <- paste(0:24, ":", 0, 0, sep = "")
time <- as.POSIXct(time, formate = %H:%M)
time <- as.POSIXct(time, format = %H:%M)
time <- as.POSIXct(time, format = "%H:%M")
install.packages(chron)
install.packages("chron")
library(chron)
time <- paste(0:24, ":", 0, 0, sep = "")
?chron
time <- chron(times = time)
time <- chron(times = time, fmt = "h:m")
time <- chron(times = time, format = (times = "h:m")
)
time <- chron(times = time, format = "h:m")
?difftime
mySleep$Duration <- with(mySleep, End.Time - Start.Time)
head(mySleep)
mySleep$Day <- wday(mySleep$Start.Time, label = TRUE)
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) = date(mySleep$Start.Time[i])) {
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$Start.Time[i])) {
mySleep$Day <- wday((mySleep$Start.Time-1), label = TRUE)
} else {
mySleep$Day <- wday(mySleep$Sleep.Time), label = TRUE)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$Start.Time[i])) {
mySleep$Day <- wday((mySleep$Start.Time-1), label = TRUE)
} else {
mySleep$Day <- wday(mySleep$Sleep.Time, label = TRUE)
}
}
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$Start.Time[i])) {
mySleep$Day[i] <- wday((mySleep$Start.Time[i]-1), label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Sleep.Time[i], label = TRUE)
}
}
head(mySleep)
date(mySleep$Start.Time[1])
date(mySleep$Start.Time[1])-1
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$Start.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Sleep.Time[i], label = TRUE)
}
}
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Sleep.Time[i], label = TRUE)
}
}
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(date(mySleep$Sleep.Time[i]), label = TRUE)
}
}
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Start.Time[i], label = TRUE)
}
}
head(mySleep)
meanSleep %>% mySleep %>%
group_by(Day, Duration = mean(Duration))
mySleep %>%
group_by(Day, Duration = mean(Duration)) %>%
meanSleep
meanSleep <- mySleep %>%
group_by(Day, Duration = mean(Duration))
meanSleep
rm(hourlySleep)
rm(i, j, l)
rm(times)
?group_by
meanSleep <- mySleep %>%
group_by(by = Day,
Duration = mean(Duration))
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration))
meanSleep
table(mySleep$Day)
mySleep[Day == "Mon"]
mySleep[Day == "Mon", ]
mySleep[mySleep$Day == "Mon", ]
?oredered
?ordered
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
ordered(Day)
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
ordered(meanSleep$Day)
meanSleep
>order
?order
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
order(meanSleep$Day)
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
order(Day)
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration))
meanSleep
ordered <- order(meanSleep, Day)
ordered <- order(meanSleep, meanSleep$Day)
ordered(meanSleep$Day)
install.packages("plotly")
library(plotly)
?plotly
?plot_ly
plot_ly(meanSleep)
plot_ly(meanSleep, type = "histogram")
plot_ly(meanSleep$Day, meanSleep$Duration, type = "histogram")
plot_ly(meanSleep, meanSleep$Duration, type = "histogram")
plot_ly(meanSleep, meanSleep$Duration)
plot_ly(meanSleep)
plotly(mySleep, )
plotly(mySleep, type = "scatter", x = Day, y = Duration)
plotly(mySleep, type = "scatter", x = ~Day, y = ~Duration)
plot_ly(mySleep, x = Day, y = Duration)
head(mySleep)
plot_ly(mySleep, x = ~Day, y = ~Duration)
mySleep <- read.csv("mySleep.csv")
mySleep$Start.Time <- dmy_hm(mySleep$Start.Time)
mySleep$End.Time <- dmy_hm(mySleep$End.Time)
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Start.Time[i], label = TRUE)
}
}
mySleep$Duration <- with(mySleep, End.Time - Start.Time)
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
print()
plot_ly(mySleep, x = ~Day, y = ~Duration)
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers", colour = ~Start.Time)
)
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers", color = ~Start.Time)
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers", xlab = ~Day)
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers")
plot_ly(mySleep, x0 = ~Day, y = ~Duration, type = "scatter", mode = "markers")
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers")
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers", hovertext = paste(mySleep$Day, mySleep$Duration))
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers", hovertext = paste(c("Sun", "Mon", "Tue", "Wed", "Thurs"), mySleep$Duration))
mySleep$Day
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Start.Time[i], label = TRUE)
}
}
head(mySleep)
mySleep$Day <- wday(mySleep$Day)
mySleep$Day <- wday(mySleep$Day, label = TRUE)
mySleep$Day
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1)
} else {
mySleep$Day[i] <- wday(mySleep$Start.Time[i])
}
}
mySleep$Day <- wday(mySleep$Day, label = TRUE)
mySleep$Duration <- with(mySleep, End.Time - Start.Time)
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
print()
head(mySleep)
for(i in 1:nrow(mySleep)) {
if(date(mySleep$Start.Time[i]) == date(mySleep$End.Time[i])) {
mySleep$Day[i] <- wday(date(mySleep$Start.Time[i])-1, label = TRUE)
} else {
mySleep$Day[i] <- wday(mySleep$Start.Time[i], label = TRUE)
}
}
mySleep$Day <- wday(mySleep$Day, label = TRUE)
head(mySleep)
mySleep$Duration <- with(mySleep, End.Time - Start.Time)
meanSleep <- mySleep %>%
group_by(Day) %>%
summarise(Duration = mean(Duration)) %>%
print()
plot_ly(mySleep, x0 = ~Day, y = ~Duration, type = "scatter", mode = "markers")
plot_ly(mySleep, x0 = ~Day, y = ~Duration, type = "scatter", mode = "markers")
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers")
plot_ly(mySleep, x = ~Day, y = ~Duration, type = "scatter", mode = "markers")
